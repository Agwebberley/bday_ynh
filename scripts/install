#!/bin/bash

# Exit on command errors and treat unset variables as an error
set -eu

# Source YunoHost helpers
source /usr/share/yunohost/helpers
source _future.sh

# Retrieve manifest arguments
app=$YNH_APP_INSTANCE_NAME
domain=$YNH_APP_ARG_DOMAIN
path=$YNH_APP_ARG_PATH
readonly app_system_name=$YNH_APP_ARG_SYSTEM_NAME
readonly app_display_name=$YNH_APP_ARG_DISPLAY_NAME
readonly is_public=$YNH_APP_ARG_IS_PUBLIC

readonly final_path=/var/www/$app_system_name

function main()
{
    check_assertions
    configure_app
    install_dependencies
    init_venv
    init_db
    configure_flask_app
    configure_service
    configure_nginx_and_ssowat
    start_app
}

function check_assertions()
{
    if su postgres -c "psql -lqt | cut -d \| -f 1 | grep -qw test"
    then
        ynh_die "Database already exists :<"
    fi
    # app_system_name is made of [a-z0-9]
    # app_display_name is made of [a-zA-Z0-9 ]
}

function configure_app()
{
    ynh_webpath_register $app $domain $path
    ynh_app_setting_set "$app" display_name "$app_display_name"
    ynh_app_setting_set "$app" system_name "$app_system_name"
    ynh_app_setting_set "$app" is_public "$is_public"
}

function install_dependencies()
{
    ynh_install_app_dependencies virtualenv \
                                 python3-dev \
                                 python3-virtualenv \
                                 python3-pip \
                                 postgresql \
                                 postgresql-9.6 \
                                 postgresql-server-dev-9.6
}

function init_venv()
{
    mkdir -p $final_path
    pushd $final_path
    virtualenv -p python3 venv
    set +o nounset 
    source venv/bin/activate
    set -o nounset 
    pip install Flask
    pip install Flask-Script
    pip install Flask-SQLAlchemy
    pip install gunicorn
    popd
}

function init_db()
{
    # Generate random password
    readonly db_name=$app_system_name
    readonly db_user=$app_system_name
    readonly db_pwd=$(ynh_string_random)
    
    # Initialize database and store pssql password for upgrade
    ynh_psql_create_db $db_name $db_user $db_pwd
    ynh_app_setting_set "$app" psqlpassword "$db_pwd"
}

function configure_flask_app()
{
    # Copy hello-world sources
    cp -r ../sources/* $final_path/

    # App settings
    ynh_replace_string "__YNH_DB_NAME__"     "$db_name"    ../conf/settings.py
    ynh_replace_string "__YNH_DB_USER__"     "$db_user"    ../conf/settings.py
    ynh_replace_string "__YNH_DB_PASSWORD__" "$db_pwd"     ../conf/settings.py
    ynh_replace_string "__YNH_APP_WEBPATH__" "$path"       ../conf/settings.py
    ynh_replace_string "__YNH_APP_FSPATH__"  "$final_path" ../conf/settings.py
    cp ../conf/settings.py $final_path/app/settings_local.py

    # Gunicorn
    ynh_replace_string "__YNH_APP_NAME__" "$app_system_name" ../conf/gunicorn.py
    ynh_replace_string "__YNH_APP_PATH__" "$final_path"      ../conf/gunicorn.py
    cp ../conf/gunicorn.py $final_path/

    # Init db
    pushd $final_path
    set +o nounset 
    source venv/bin/activate
    set -o nounset 
    ./manage.py nuke
    ./manage.py lorem
    popd

    # Set permissions
    useradd $app_system_name -d $final_path || echo "User already exists"
    chown -R $app_system_name:www-data $final_path
}

function configure_service()
{
    # Log folder
    mkdir -p /var/log/$app_system_name
    chown -R $app_system_name:www-data /var/log/$app_system_name

    # Systemd config
    ynh_replace_string "__YNH_APP_NAME__" "$app_system_name" ../conf/app.service
    ynh_replace_string "__YNH_APP_PATH__" "$final_path"      ../conf/app.service
    cp ../conf/app.service /etc/systemd/system/$app_system_name.service

    systemctl daemon-reload
    systemctl enable $app_system_name
    yunohost service add $app_system_name -l /var/log/$app_system_name/access.log
}

function configure_nginx_and_ssowat()
{
    # Nginx conf
    ynh_replace_string "__YNH_APP_NAME__"    "$app_system_name" ../conf/nginx.conf
    ynh_replace_string "__YNH_APP_WEBPATH__" "$path"            ../conf/nginx.conf
    ynh_replace_string "__YNH_APP_FSPATH__"  "$final_path"      ../conf/nginx.conf
    cp ../conf/nginx.conf /etc/nginx/conf.d/$domain.d/$app_system_name.conf

    # Reload Nginx and regenerate SSOwat conf
    service nginx reload
    yunohost app ssowatconf
}

function start_app()
{
    systemctl start $app_system_name
}

main
